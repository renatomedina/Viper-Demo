//
//  LoginPresenter.swift
//  zap-challenge-viper
//
//  Created by Renato Medina on 04/04/19.
//  Copyright (c) 2019 Renato Medina. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class LoginPresenter {

    // MARK: - Private properties -
    private unowned let _view: LoginViewInterface
    private let _wireframe: LoginWireframeInterface
    private let _interactor: LoginInteractorInterface

    // MARK: - Lifecycle -
    init(wireframe: LoginWireframeInterface, view: LoginViewInterface, interactor: LoginInteractorInterface) {
        _wireframe = wireframe
        _view = view
        _interactor = interactor
    }
}

// MARK: - Extensions -

extension LoginPresenter: LoginPresenterInterface {
    
    func validateLogin(email: String?, password: String?) {
        let validationTypes = _interactor.login(email: email, password: password)
        
        switch validationTypes {
        case .success:
            _wireframe.navigate(to: .close)
            break
        case .wrongEmail:
            _view.errorLogin(message: "Email inv√°lido")
            break
        case .wrongPassword:
            _view.errorLogin(message: "Password inv√°lido")
            break
        }
    }
    
    func tapCloseButton() {
        _wireframe.navigate(to: .close)
    }
    
    func viewDidLoad() {
        
    }
}
